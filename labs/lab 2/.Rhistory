knitr::opts_chunk$set(
cache=TRUE, warning=FALSE, error=FALSE, message=FALSE, echo=TRUE,
results = 'markup', dev='png', dpi=150
)
#####
# settings for my pretty plots (bc Bryan is picky)
require('tidyverse')
blank_theme <- theme_minimal(base_size = 30) +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank()) +
theme(axis.line.x =
element_line(colour = 'black',
size=0.5, linetype='solid')) +
theme(axis.line.y = element_line(colour = 'black',
size=0.5, linetype='solid'))
# uncomment the install.packages if you do not have this package
# install.packages('wooldridge')
require('wooldridge')
data('wage1')
head(wage1)
knitr::opts_chunk$set(
cache=TRUE, warning=FALSE, error=FALSE, message=FALSE, echo=TRUE,
results = 'markup', dev='png', dpi=150
)
#####
# settings for my pretty plots (bc Bryan is picky)
require('tidyverse')
blank_theme <- theme_minimal(base_size = 30) +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank()) +
theme(axis.line.x =
element_line(colour = 'black',
size=0.5, linetype='solid')) +
theme(axis.line.y = element_line(colour = 'black',
size=0.5, linetype='solid'))
# uncomment the install.packages if you do not have this package
# install.packages('wooldridge')
require('wooldridge')
data('wage1')
head(wage1)
# uncomment the install.packages if you do not have this package
install.packages('wooldridge')
install.packages('wooldridge')
# uncomment the install.packages if you do not have this package
# install.packages('wooldridge')
require('wooldridge')
data('wage1')
head(wage1)
# A histogram of wages
wage1 %>% ggplot() +
geom_histogram(aes(x = wage),
fill = 'light blue',
color = 'blue') + blank_theme
wage1 %>% mutate(gender = as.factor(female)) %>%
ggplot() +
geom_histogram(aes(x = wage, color = gender, fill = gender, dodge = TRUE)) +
blank_theme
y = wage1$wage
x = wage1$educ
plot(x, y, xlab = "Education", ylab = "Hourly Wages")
abline(slm, col = "red")
slm <- lm(wage ~ educ, data = wage1)
summary(slm)
y = wage1$wage
x = wage1$educ
plot(x, y, xlab = "Education", ylab = "Hourly Wages")
abline(slm, col = "red")
# Make a scatter plot with wages on the y axis, and education on the x axis
plot(wage1$educ~wage1$wage)
# Make a scatter plot with wages on the y axis, and education on the x axis
plot(wage1$wage~wage1$educ)
summarise(slm)
summarry(slm)
summarty(slm)
summary(slm)
slm$residuals
# Plot residuals against education
plot(slm$residuals,wage1$educ)
# Make a scatterplot of log(wage) vs education
plot(log(wage1$wage)~log(wage1$educ))
# Print the regression coefficients for log(wage) vs education
plot(log(wage1$wage)~ wage1$educ)
# True parameters (unknown)
beta0 = 32
beta1 = 0.5
# plot the line y = x * beta1 + beta0, for x in [0, 10]
xvals <- seq(0, 10, 0.01)
yvals <- beta0 + beta1*xvals
plot(xvals,
yvals,
type = "l",
xlab = "x", ylab = "y", col = "red")
#################
# draw data according to the linear regression model.
#################
n_obs <- 100 # number of observations
sig <- 6 # std error of the y's
x <- runif(n_obs, 0, 10) # draw x's: they will be fixed for our experiment
draw_data <- function(x, beta0, beta1, sig){
n_obs <- length(x)
# draw y's
y = rnorm(n_obs, mean = beta0 + beta1*x, sd = sig)
return(data.frame(x = x, y = y))
}
# plot the data
ggplot() +
geom_point(data = dataset, aes(x = x, y = y)) +
blank_theme +
# this is the line we wish to recover (in red):
geom_line(aes(x = xvals, y = yvals), color = 'red') +
# this is the estimated regression line (in blue):
geom_smooth(data = dataset,
aes(x = x, y = y), method = "lm",
col = "blue", se = FALSE)
dataset <- draw_data(x, beta0, beta1, sig)
# plot the data
ggplot() +
geom_point(data = dataset, aes(x = x, y = y)) +
blank_theme +
# this is the line we wish to recover (in red):
geom_line(aes(x = xvals, y = yvals), color = 'red') +
# this is the estimated regression line (in blue):
geom_smooth(data = dataset,
aes(x = x, y = y), method = "lm",
col = "blue", se = FALSE)
