library("model4you")
library(ggplot2)
load("twoyear.rdata")
twoyear = data[c("lwage","jc","univ","exper")]
library(faraway)
body = read.csv("Bodyfat.csv")
body = body[c(2,3,4,5,10)]
sort(lmod4$fitted.values)
sort(lmod4$fitted.values,decreasing = TRUE)
head(sort(lmod4$fitted.values,decreasing = TRUE))
fitted.values
fit_value = lmod4$fitted.values
res = lmod4$residuals
head(sort(fit_value,decreasing = TRUE))
lmod4 = lm(bodyfat ~ Age +Weight + Height+Thigh,data=body)
fit_value = lmod4$fitted.values
res = lmod4$residuals
plot(res ~ fit_value,xlab="fitted values", ylab="residuals")
text(fit_value[c(39,42)])
text(fit_value[39],"39)"
text(fit_value[39],"39")
plot(res ~ fit_value,xlab="fitted values", ylab="residuals")
text(fit_value[39],"39")
plot(res ~ fit_value,xlab="fitted values", ylab="residuals")
text(fit_value[39],"39")
text(fit_value[42],"42")
plot(res ~ fit_value,xlab="fitted values", ylab="residuals")
text(fit_value[39],res[39],"39")
text(fit_value[42],res[39],"42")
plot(res ~ fit_value,xlab="fitted values", ylab="residuals")
text(fit_value[39],res[39]+3,"39")
text(fit_value[42],res[39]+3,"42")
plot(res ~ fit_value,xlab="fitted values", ylab="residuals")
text(fit_value[39],res[39]+3,"39")
text(fit_value[42],res[42]+3,"42")
text(fit_value[39],res[39]+3,"#39")
plot(res ~ fit_value,xlab="fitted values", ylab="residuals")
text(fit_value[39],res[39]+3,"#39")
text(fit_value[42],res[42]+3,"#42")
lmod4 = lm(bodyfat ~ Age +Weight + Height+Thigh,data=body)
fit_value = lmod4$fitted.values
res = lmod4$residuals
#index
head(sort(fit_value,decreasing = TRUE))
plot(res ~ fit_value,xlab="fitted values", ylab="residuals")
text(fit_value[39],res[39]+3,"#39")
text(fit_value[42],res[42]+3,"#42")
lmod4 = lm(bodyfat ~ Age +Weight + Height+Thigh,data=body)
fit_value = lmod4$fitted.values
res = lmod4$residuals
plot(res ~ fit_value,xlab="fitted values", ylab="residuals")
text(fit_value[39],res[39]+3,"#39")
text(fit_value[42],res[42]+3,"#42")
n = nrow(body)
p = 4
y = body$bodyfat
X = model.matrix(lmod4)
H = X %*% solve(t(X) %*% X) %*% t(X)
e_hat = lmod4$residuals
y_hat = H %*% y
sigma_hat <- sqrt(sum(e_hat**2) / (n - p - 1))
e_hat_std <- e_hat / (sigma_hat * sqrt(1 - diag(H)))
plot(e_hat_std ~ lmod4$fitted.values,xlab="fitted values", ylab = 'standardized residual')
n = nrow(body)
p = 4
y = body$bodyfat
X = model.matrix(lmod4)
H = X %*% solve(t(X) %*% X) %*% t(X)
e_hat = lmod4$residuals
y_hat = H %*% y
sigma_hat <- sqrt(sum(e_hat**2) / (n - p - 1))
e_hat_std <- e_hat / (sigma_hat * sqrt(1 - diag(H)))
plot(e_hat_std ~ fit_value,xlab="fitted values", ylab = 'standardized residual')
text(fit_value[39],e_hat_std[39]+3,"#39")
text(fit_value[42],e_hat_std[42]+3,"#42")
n = nrow(body)
p = 4
y = body$bodyfat
X = model.matrix(lmod4)
H = X %*% solve(t(X) %*% X) %*% t(X)
e_hat = lmod4$residuals
y_hat = H %*% y
sigma_hat <- sqrt(sum(e_hat**2) / (n - p - 1))
e_hat_std <- e_hat / (sigma_hat * sqrt(1 - diag(H)))
plot(e_hat_std ~ fit_value,xlab="fitted values", ylab = 'standardized residual')
text(fit_value[39],e_hat_std[39]+1,"#39")
text(fit_value[42],e_hat_std[42]+1,"#42")
n = nrow(body)
p = 4
y = body$bodyfat
X = model.matrix(lmod4)
H = X %*% solve(t(X) %*% X) %*% t(X)
e_hat = lmod4$residuals
y_hat = H %*% y
sigma_hat <- sqrt(sum(e_hat**2) / (n - p - 1))
e_hat_std <- e_hat / (sigma_hat * sqrt(1 - diag(H)))
plot(e_hat_std ~ fit_value,xlab="fitted values", ylab = 'standardized residual')
text(fit_value[39],e_hat_std[39]+0.5,"#39")
text(fit_value[42],e_hat_std[42]+0.5,"#42")
leverages = diag(H)
n = nrow(body)
p = 4
y = body$bodyfat
X = model.matrix(lmod4)
H = X %*% solve(t(X) %*% X) %*% t(X)
e_hat = lmod4$residuals
y_hat = H %*% y
sigma_hat <- sqrt(sum(e_hat**2) / (n - p - 1))
leverages = diag(H)
plot(leverages)
n = nrow(body)
p = 4
y = body$bodyfat
X = model.matrix(lmod4)
H = X %*% solve(t(X) %*% X) %*% t(X)
e_hat = lmod4$residuals
y_hat = H %*% y
sigma_hat <- sqrt(sum(e_hat**2) / (n - p - 1))
leverages = diag(H)
h_bar = (1+p)/n
plot(leverages)
abline(b=2*h_bar)
abline(b=3*h_bar)
?abline
n = nrow(body)
p = 4
y = body$bodyfat
X = model.matrix(lmod4)
H = X %*% solve(t(X) %*% X) %*% t(X)
e_hat = lmod4$residuals
y_hat = H %*% y
sigma_hat <- sqrt(sum(e_hat**2) / (n - p - 1))
leverages = diag(H)
h_bar = (1+p)/n
plot(leverages)
abline(a=2*h_bar)
n = nrow(body)
p = 4
y = body$bodyfat
X = model.matrix(lmod4)
H = X %*% solve(t(X) %*% X) %*% t(X)
e_hat = lmod4$residuals
y_hat = H %*% y
sigma_hat <- sqrt(sum(e_hat**2) / (n - p - 1))
leverages = diag(H)
h_bar = (1+p)/n
plot(leverages)
abline(b=0,a=2*h_bar)
abline(b=0,a=3*h_bar)
sort(leverages,decreasing = TRUE)
head(sort(leverages,decreasing = TRUE))
?text
plot(leverages)
head(sort(leverages,decreasing = TRUE))
n = nrow(body)
p = 4
y = body$bodyfat
X = model.matrix(lmod4)
H = X %*% solve(t(X) %*% X) %*% t(X)
e_hat = lmod4$residuals
y_hat = H %*% y
sigma_hat <- sqrt(sum(e_hat**2) / (n - p - 1))
leverages = diag(H)
h_bar = (1+p)/n
plot(leverages)
abline(b=0,a=2*h_bar)
abline(b=0,a=3*h_bar)
head(sort(leverages,decreasing = TRUE))
text(x = 42,y=0.60373733+0.2,"#42")
text(x = 39,y=0.17103211+0.2,"#39")
n = nrow(body)
p = 4
y = body$bodyfat
X = model.matrix(lmod4)
H = X %*% solve(t(X) %*% X) %*% t(X)
e_hat = lmod4$residuals
y_hat = H %*% y
sigma_hat <- sqrt(sum(e_hat**2) / (n - p - 1))
leverages = diag(H)
h_bar = (1+p)/n
plot(leverages)
abline(b=0,a=2*h_bar)
abline(b=0,a=3*h_bar)
head(sort(leverages,decreasing = TRUE))
text(x = 42,y=0.60373733-0.2,"#42")
text(x = 39,y=0.17103211+0.2,"#39")
n = nrow(body)
p = 4
y = body$bodyfat
X = model.matrix(lmod4)
H = X %*% solve(t(X) %*% X) %*% t(X)
e_hat = lmod4$residuals
y_hat = H %*% y
sigma_hat <- sqrt(sum(e_hat**2) / (n - p - 1))
leverages = diag(H)
h_bar = (1+p)/n
plot(leverages)
abline(b=0,a=2*h_bar)
abline(b=0,a=3*h_bar)
head(sort(leverages,decreasing = TRUE))
text(x = 42,y=0.60373733-0.01,"#42")
text(x = 39,y=0.17103211+0.01,"#39")
n = nrow(body)
p = 4
y = body$bodyfat
X = model.matrix(lmod4)
H = X %*% solve(t(X) %*% X) %*% t(X)
e_hat = lmod4$residuals
y_hat = H %*% y
sigma_hat <- sqrt(sum(e_hat**2) / (n - p - 1))
leverages = diag(H)
h_bar = (1+p)/n
plot(leverages)
abline(b=0,a=2*h_bar)
abline(b=0,a=3*h_bar)
head(sort(leverages,decreasing = TRUE))
text(x = 42,y=0.60373733-0.04,"#42")
text(x = 39,y=0.17103211+0.04,"#39")
?abline
n = nrow(body)
p = 4
y = body$bodyfat
X = model.matrix(lmod4)
H = X %*% solve(t(X) %*% X) %*% t(X)
e_hat = lmod4$residuals
y_hat = H %*% y
sigma_hat <- sqrt(sum(e_hat**2) / (n - p - 1))
leverages = diag(H)
h_bar = (1+p)/n
plot(leverages)
abline(b=0,a=2*h_bar,col="blue")
abline(b=0,a=3*h_bar,col="red")
head(sort(leverages,decreasing = TRUE))
text(x = 42,y=0.60373733-0.04,"#42")
text(x = 39,y=0.17103211+0.04,"#39")
lmod4 = lm(bodyfat ~ Age +Weight + Height+Thigh,data=body)
fit_value = lmod4$fitted.values
res = lmod4$residuals
plot(res ~ fit_value,xlab="fitted values", ylab="residuals")
text(fit_value[39],res[39]+3,"#39")
text(fit_value[42],res[42]+3,"#42")
lmod4 = lm(bodyfat ~ Age +Weight + Height+Thigh,data=body)
fit_value = lmod4$fitted.values
head(sort(fit_value,decreasing = TRUE))
res = lmod4$residuals
plot(res ~ fit_value,xlab="fitted values", ylab="residuals")
text(fit_value[39],res[39]+3,"#39")
text(fit_value[42],res[42]+3,"#42")
e_hat_std <- e_hat / (sigma_hat * sqrt(1 - diag(H)))
plot(e_hat_std ~ fit_value,xlab="fitted values", ylab = 'standardized residual')
text(fit_value[39],e_hat_std[39]+0.5,"#39")
text(fit_value[42],e_hat_std[42]+0.5,"#42")
plot(lmod4$residuals ~ e_hat_std,xlab= "Standardized Residuals",ylab = "residuals")
head(sort(e_hat_std))
plot(res ~ e_hat_std,xlab= "Standardized Residuals",ylab = "residuals")
head(sort(res))
plot(res ~ e_hat_std,xlab= "Standardized Residuals",ylab = "residuals")
head(sort(res))
plot(res ~ e_hat_std,xlab= "Standardized Residuals",ylab = "residuals")
text(e_hat_std[42],res[42],"#42")
text(e_hat_std[39],res[39],"#39")
head(sort(res))
plot(res ~ e_hat_std,xlab= "Standardized Residuals",ylab = "residuals")
text(e_hat_std[42],res[42]+3,"#42")
text(e_hat_std[39],res[39]+3,"#39")
e_hat_pred <- e_hat / (1 - diag(H))
plot(e_hat_pred ~ fit_value, xlab = "fitted values",ylab = 'predicted residual')
e_hat_pred <- e_hat / (1 - diag(H))
plot(e_hat_pred ~ fit_value, xlab = "fitted values",ylab = 'predicted residual')
text(fit_value[39],e_hat_pred[39],"#39")
text(fit_value[42],e_hat_pred[42],"#42")
e_hat_pred <- e_hat / (1 - diag(H))
plot(e_hat_pred ~ fit_value, xlab = "fitted values",ylab = 'predicted residual')
text(fit_value[39],e_hat_pred[39]+3,"#39")
text(fit_value[42],e_hat_pred[42]+3,"#42")
plot(e_hat ~ e_hat_pred,xlab="residuals",ylab="predicted residuals")
text(e_hat_pred[39],e_hat[39]+3,"#39")
text(e_hat_pred[42],e_hat[42]+3,"#42")
plot(e_hat~diag(H),xlab="leverage",ylab="residual")
text(leverages[39],e_hat[39]+3,"#39")
text(leverages[42],e_hat[42]+3,"#42")
plot(e_hat_pred ~ e_hat_std,xlab="Standardized Predicted Residuals",ylab="predicted residuals")
plot(e_hat_pred ~ e_hat_std,xlab="Standardized Predicted Residuals",ylab="predicted residuals")
text(e_hat_std[39],e_hat_pred[39]+3,"#39")
text(e_hat_std[42],e_hat_pred[42]+3,"#42")
e_hat_pred_std = e_hat_std * sqrt((n-p-2)/(n-p-1-e_hat_std^2))
plot(e_hat_pred ~ e_hat_pred_std,xlab="Standardized Predicted Residuals",ylab="predicted residuals")
text(e_hat_std[39],e_hat_pred_std[39]+3,"#39")
text(e_hat_std[42],e_hat_pred_std[42]+3,"#42")
e_hat_pred_std = e_hat_std * sqrt((n-p-2)/(n-p-1-e_hat_std^2))
plot(e_hat_pred ~ e_hat_pred_std,xlab="Standardized Predicted Residuals",ylab="predicted residuals")
text(e_hat_pred_std[39],e_hat_pred[39]+3,"#39")
text(e_hat_pred_std[42],e_hat_pred[42]+3,"#42")
# any convenient way to calculate RSS[i]?
# RSS[i] = RSS-(ei^2/(1-hi))
plot(e_hat_std ~ e_hat_pred_std,xlab="Standardized Predicted Residuals",ylab="predicted residuals")
text(e_hat_pred_std[39],e_hat_std[39]+3,"#39")
text(e_hat_pred_std[42],e_hat_std[42]+3,"#42")
# any convenient way to calculate RSS[i]?
# RSS[i] = RSS-(ei^2/(1-hi))
plot(e_hat_std ~ e_hat_pred_std,xlab="Standardized Predicted Residuals",ylab="predicted residuals")
text(e_hat_pred_std[39],e_hat_std[39]+0.5,"#39")
text(e_hat_pred_std[42],e_hat_std[42]+0.5,"#42")
4/(n-p-1)
head(sort(cooks.distance(lmod4),decreasing = TRUE))
cooks.dist = cooks.distance(lmod4)
plot(cooks.dist)
text(39,cooks.dist[39]+0.5,"#39")
text(42,cooks.dist[42]+0.5,"#42")
cooks.dist = cooks.distance(lmod4)
plot(cooks.dist)
text(39,cooks.dist[39]+0.5,"#39")
text(42,cooks.dist[42]-0.5,"#42")
p_values = 1-2*pt(abs(e_hat_pred_std,n-p-2))
p_values = 1-2*pt(abs(e_hat_pred_std),n-p-2)
p_values
p_values = 1-2*pt(abs(e_hat_pred_std),n-p-2)
plot(p_values)
p_values = 1-2*pt(abs(e_hat_pred_std),n-p-2)
plot(p_values)
which(p_values<0.05)
pt(2.3,2)
pt(-2.3,2)
p_values = 2*(1-pt(abs(e_hat_pred_std),n-p-2))
plot(p_values)
which(p_values<0.05)
p_values = 2*(1-pt(abs(e_hat_pred_std),n-p-2))
plot(p_values)
p_values[which(p_values<0.05)]
p_values = 2*(1-pt(abs(e_hat_pred_std),n-p-2))
plot(p_values)
sort(p_values[which(p_values<0.05)])
p_values[which(p_values < 0.05/n)]
p_values = 2*(1-pt(abs(e_hat_pred_std),n-p-2))
plot(p_values)
abline(a=0.05,col="blue")
p_values = 2*(1-pt(abs(e_hat_pred_std),n-p-2))
plot(p_values)
abline(a=0.05,b=0,col="blue")
sort(p_values[which(p_values<0.05)])
body[,39]
body[39]
body[39,]
body[c(39,42),]
body[c(39,42),]
hist(body$Weight)
hist(body$Height)
sd(body$Weight)
sd(body$Weight);mean(body$Weight)
body[c(39,42),]
363.15-179
184/30
women[]
women[!2]
women[!3]
women[-3]
women[-1]
women[-2]
women[-2.]
women[-2,]
summary(lm(bodyfat ~ Age +Weight + Height+Thigh,data=body))
summary(lm(bodyfat ~ Age +Weight + Height+Thigh,data=body[-42,]))
summary(lm(bodyfat ~ Age +Weight + Height+Thigh,data=body[c(-42,-39),]))
lmod3$coefficients
ci = matrix(0,4,byrow=TRUE)
ci
for (i in 1:4) {
c(lmod3$coefficients[i]-ma[i,2],lmod3$coefficients[i]-ma[i,1])
}
ma
vec_residual = lmod3$residuals
beta_matrix = matrix(0,2000,5,byrow = TRUE)
for (i in 1:2000) {
e_hat_i = sample(vec_residual,length(vec_residual),replace = TRUE)
y_i = model.matrix(lmod3) %*% lmod3$coefficients + e_hat_i
beta_matrix[i,] = lm(y_i ~ pop15 + pop75 + dpi + ddpi, data = savings)$coefficients - lmod3$coefficients
}
ma = matrix(0,5,2,byrow = TRUE)
for (i in 1:5) {
a = quantile(beta_matrix[,i],0.025)
b = quantile(beta_matrix[,i],0.975)
ma[i,] = c(a,b)
}
ma = as.data.frame(ma)
colnames(ma) = c(0.025,0.975)
ma
ci = matrix(0,4,byrow=TRUE)
for (i in 1:4) {
c(lmod3$coefficients[i]-ma[i,2],lmod3$coefficients[i]-ma[i,1])
}
ci
ci = matrix(0,4,byrow=TRUE)
for (i in 1:4) {
ci[i,] = c(lmod3$coefficients[i]-ma[i,2],lmod3$coefficients[i]-ma[i,1])
}
ci = data.frame(matrix(0,4,byrow=TRUE))
ci
ci = data.frame(matrix(0,4,byrow=TRUE))
for (i in 1:4) {
ci[i,] = c(lmod3$coefficients[i]-ma[i,2],lmod3$coefficients[i]-ma[i,1])
}
ci = list()
ci
ci[2,]=c(1,2)
ci = matrix(8,2,byrow = TRUE)
ci
ci = matrix(0,8,byrow = TRUE)
ci
ci = matrix(0,8,2byrow = TRUE)
ci = matrix(0,8,2,byrow = TRUE)
ci
ci = matrix(0,4,2,byrow = TRUE)
ci
ci = matrix(0,4,2,byrow = TRUE)
for (i in 1:4) {
ci[i,] = c(lmod3$coefficients[i]-ma[i,2],lmod3$coefficients[i]-ma[i,1])
}
ci
ma
ci = matrix(0,4,2,byrow = TRUE)
for (i in 2:5) {
ci[i,] = c(lmod3$coefficients[i]-ma[i,2],lmod3$coefficients[i]-ma[i,1])
}
ci = matrix(0,4,2,byrow = TRUE)
for (i in 1:4) {
ci[i,] = c(lmod3$coefficients[i]-ma[i+1,2],lmod3$coefficients[i]-ma[i+1,1])
}
ci
ci = matrix(0,4,2,byrow = TRUE)
for (i in 1:4) {
ci[i,] = c(lmod3$coefficients[i+1]-ma[i+1,2],lmod3$coefficients[i+1]-ma[i+1,1])
}
ci
-0.4611931 + 0.27539967
rm(list = ls())
#Partial Residual Plot (also called component + Residual Plot)
library(faraway)
data(savings)
g = lm(sr ~ pop15 + pop75 + dpi + ddpi, savings)
summary(g)
plot(savings$pop15, residuals(g) + coef(g)['pop15']*savings$pop15, xlab = "Population under 15", ylab = "Savings (Adjusted)")
abline(0, coef(g)['pop15'])
yy = residuals(g) + coef(g)['pop15']*savings$pop15
xx = savings$pop15
temp = lm(yy~xx)
temp$coefficients
g$coefficients
g1 = lm(sr ~ pop15 + pop75 + dpi + ddpi, savings, subset = (pop15 > 35))
g2 = lm(sr ~ pop15 + pop75 + dpi + ddpi, savings, subset = (pop15 < 35))
summary(g1)
summary(g2)
g$coefficients
g1$coefficients
g2$coefficients
#Partial Regression Plots
library(faraway)
data(savings)
g = lm(sr ~ pop15 + pop75 + dpi + ddpi, savings)
summary(g)
#Let us look at the partial regression plot for the savings ratio against pop15.
d = residuals(lm(sr ~ pop75 + dpi + ddpi, savings))
m = residuals(lm(pop15 ~ pop75 + dpi + ddpi, savings))
plot(m, d, xlab = "pop15 residuals", ylab = "Savings residuals")
g3 = lm(d ~ m)
g3$coefficients
g$coefficients
abline(0, coef(g)['pop15'])
#Checking homoskedasticity (constant variance), normality and uncorrelatedness of the errors
#1a) Checking Assumption of constant variance
#Plot residuals against the fitted values.
#Some examples of residuals against fitted values plots
n = 200
xx = 3 + 4*abs(rnorm(n))
yy1 = -2 + 5*xx + rnorm(n)
yy2 = -2 + 5*xx + (xx^(1.5))*rnorm(n)
yy3 = -2 + 0.5*xx^(1.85) + rnorm(n)
mod1 = lm(yy1 ~ xx)
mod2 = lm(yy2 ~ xx)
mod3 = lm(yy3 ~ xx)
par(mfrow = c(1, 3))
{
plot(mod1$fitted.values, mod1$residuals)
plot(mod2$fitted.values, mod2$residuals)
plot(mod3$fitted.values, mod3$residuals)
}
#Savings dataset
library(faraway)
data(savings)
names(savings)
g <- lm(sr ~ ., savings)
plot(g$fitted, g$res, xlab="Fitted", ylab="Residuals")
#This plot does not suggest any non-constant variance or nonlinearity
#One also plots absolute values of residuals against fitted values for checking non-constant variance
plot(g$fitted, abs(g$res), xlab="Fitted", ylab="|Residuals|")
par(mfrow = c(1, 2))
for(i in 1:2) {plot(1:50, rnorm(50))}
par(mfrow = c(1, 2))
for(i in 1:2) plot(1:50, (1:50)*rnorm(50))
par(mfrow = c(1, 2))
for(i in 1:2) plot(1:50, sqrt((1:50))*rnorm(50))
par(mfrow = c(1, 2))
for(i in 1:2) plot(1:50, cos((1:50)*pi/25) + rnorm(50))
#Now let us look at some residuals against explanatory variable plots.
plot(savings$pop15, residuals(g), xlab = "population under 15", ylab = "Residuals")
plot(savings$pop75, residuals(g), xlab = "population over 75", ylab = "Residuals")
var.test(residuals(g)[savings$pop15>35], residuals(g)[savings$pop15<35])
#A significant difference is seen. This suggest nonconstant variance. There are two main approaches to deal with nonconstant variance: (a) weighted least squares (later) and (b) variable transformations. I will illustrate transformations in the next class.
#A significant difference is seen. This suggest nonconstant variance. There are two main approaches to deal with nonconstant variance: (a) weighted least squares (later) and (b) variable transformations. I will illustrate transformations in the next class.
#A significant difference is seen. This suggest nonconstant variance. There are two main approaches to deal with nonconstant variance: (a) weighted least squares (later) and (b) variable transformations. I will illustrate transformations in the next class.
#A significant difference is seen. This suggest nonconstant variance. There are two main approaches to deal with nonconstant variance: (a) weighted least squares (later) and (b) variable transformations. I will illustrate transformations in the next class.
#A significant difference is seen. This suggest nonconstant variance. There are two main approaches to deal with nonconstant variance: (a) weighted least squares (later) and (b) variable transformations. I will illustrate transformations in the next class.
#A significant difference is seen. This suggest nonconstant variance. There are two main approaches to deal with nonconstant variance: (a) weighted least squares (later) and (b) variable transformations. I will illustrate transformations in the next class.
