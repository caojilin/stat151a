lmod2 = update(lmod2,. ~. -Height)
summary(lmod2)
lmod2 = update(lmod2,. ~. -Ankle)
summary(lmod2)
lmod2 = update(lmod2,. ~. -Biceps)
summary(lmod2)
lmod2 = update(lmod2,. ~. -Hip)
summary(lmod2)
#Age Weight Neck Abdomen Thigh Forearm  Wrist
lmod2.backward = lmod2
coplot()
?coplot
quakes
pairs(quakes)
install.packages("webglobe")
data(quakes)
?quakes
plot(mag, stations, quakes)
plot(mag, stations, data = quakes)
plot(mag, stations, data = quakes)
a = data("quakes")
a
plot(y=mag, x = stations, data = quakes)
View(quakes)
plot(y=mag, x = stations, data = quakes)
plot(quakes$mag,quakes$stations)
pairs(quakes)
wg <- webglobe(immediate=TRUE)
library(webglobe)
wg <- webglobe(immediate=TRUE)
Sys.sleep(10)
wg + wgpoints(quakes$lat, quakes$lon, size=5*quakes$mag)
wg + wgcamcenter(-24, 178.0650, 8000)                    #Move camera
wg + wgcamcenter(-24, 178.0650, 8000)                    #Move camera
?coplot
coplot(lat ~ long | depth, data = quakes)
View(ant6)
coplot( Mass ~ Distance | Colony, data = ant6)
coplot( Mass ~ Colony | Distance, data = ant6)
knitr::opts_chunk$set(echo = TRUE)
library("model4you")
library(ggplot2)
library(faraway)
library(leaps)
library(car)
body = read.csv("Bodyfat.csv")
ant = read.csv("thatch-ant.dat.txt")
ggplot(data = ant6, aes(y=Distance)) +
geom_boxplot() +
facet_wrap( ~ Colony)
View(col5)
hist(col5$Distance)
hist(col1$Distance)
hist(col4$Distance)
ggplot(data=ant6) + geom_histogram(Distance)+facet_wrap(~Colony)
ggplot(data=ant6) + geom_histogram(aes(y=Distance))+facet_wrap(~Colony)
ggplot(data=ant6) + geom_histogram(aes(Distance))+facet_wrap(~Colony)
factor(ant6$Distance)
ggplot(data = ant6, aes(y=Distance)) +
geom_boxplot() +
facet_wrap( ~ Colony)
ggplot(data = ant, aes(y=Distance,x=Size.class)) +
geom_point() +
facet_wrap( ~ Colony)
ggplot(data = ant, aes(y=Distance,x=Mass)) +
geom_point() +
facet_wrap( ~ Colony)
ggplot(data = ant6, aes(y=Distance,x=Mass)) +
geom_point() +
facet_wrap( ~ Colony)
ggplot(data = ant6, aes(y=Distance)) +
geom_boxplot() +
facet_wrap( ~ Colony)
ggplot(data = ant6, aes(y=Distance,x=Mass)) +
geom_point() +
facet_wrap( ~ Colony)
ggplot(data = ant6, aes(y=Distance)) +
geom_boxplot() +
facet_wrap( ~ Colony)
?geom_col
?coplot
coplot(Mass |Distance=10, data=ant6)
coplot(Mass |Distance, data=ant6)
coplot(Mass  |Distance, data=ant6)
coplot(ant6$Mass  |Distance, data=ant6)
coplot(ant6$Mass  |ant6$Distance, data=ant6)
coplot(Mass ~ Distance  |Colony, data=ant6)
coplot(lat ~ long | depth, data = quakes)
coplot(Life.Exp ~ Income | Illiteracy * state.region, number = 3,
panel = function(x, y, ...) panel.smooth(x, y, span = .8, ...))
## y ~ factor -- not really sensible, but 'show off':
coplot(Life.Exp ~ state.region | Income * state.division,
panel = panel.smooth)
})
coplot(Life.Exp ~ Income | Illiteracy * state.region, number = 3,
panel = function(x, y, ...) panel.smooth(x, y, span = .8, ...))
with(data.frame(state.x77), {
coplot(Life.Exp ~ Income | Illiteracy * state.region, number = 3,
panel = function(x, y, ...) panel.smooth(x, y, span = .8, ...))
## y ~ factor -- not really sensible, but 'show off':
coplot(Life.Exp ~ state.region | Income * state.division,
panel = panel.smooth)
})
lmod6 = lm(Mass ~ Colony + Distance + Size.class, data=ant6)
summary(lmod6)
dummy <- as.numeric(ant6$Colony == 5)
dummy
lmod6 = lm(Mass ~ dummy + Distance + Size.class, data=ant6)
summary(lmod6)
lmod6 = lm(Mass ~ Colony + Distance + Size.class, data=ant6)
summary(lmod6)
lmod6 = lm(Mass ~ Colony + Distance + Size.class, data=ant6)
summary(lmod6)
lmod6 = lm(Mass ~ dummy + Distance + Size.class, data=ant6)
summary(lmod6)
lmod6 = lm(Mass ~ Colony + Distance + Size.class, data=ant6)
summary(lmod6)
lmod6 = lm(Mass ~ Colony + Distance + Size.class, data=ant6)
summary(lmod6)
str(ant6)
as.character(ant6$Colony)
ant6$Colony = as.character(ant6$Colony)
lmod6 = lm(Mass ~ Colony + Distance + Size.class, data=ant6)
summary(lmod6)
model.matrix(lmod6)
str(ant6)
head(model.matrix(lmod6))
View(ant6)
col1 = ant[ant$Colony == 1,]
col2 = ant[ant$Colony == 2,]
col3 = ant[ant$Colony == 3,]
col4 = ant[ant$Colony == 4,]
col5 = ant[ant$Colony == 5,]
col6 = ant[ant$Colony == 6,]
ant6 = rbind(col1,col2,col3,col4,col5,col6)
ant6$Colony = as.factor(ant6$Colony)
str(ant6)
lmod6 = lm(Mass ~ Colony + Distance + Size.class, data=ant6)
summary(lmod6)
as.factor(ant6$Colony)
head(model.matrix(lmod6))
model.matrix(lmod6)[100:105]
model.matrix(lmod6)[100:105,]
model.matrix(lmod6)[200:205,]
# coplot(Mass ~ Distance  |Colony, data=ant6)
ggplot(ant6) + geom_boxplot(aes(x=Cology, y = Distance))
# coplot(Mass ~ Distance  |Colony, data=ant6)
ggplot(ant6) + geom_boxplot(aes(x=Colony, y = Distance))
# coplot(Mass ~ Distance  |Colony, data=ant6)
ggplot(ant6) + geom_boxplot(aes(x=Colony, y = Distance))
ggplot(ant6) + geom_boxplot(aes(x=Mass, y = Distance))
# coplot(Mass ~ Distance  |Colony, data=ant6)
ggplot(ant6) + geom_boxplot(aes(x=Colony, y = Distance))
ggplot(ant6) + geom_boxplot(aes(x=Colony, y = Mass))
mean(Mass, data=ant6
)
summary(ant6)
library(dplyr)
summarise(ant6)
summarise(ant6,)
?summarise
library(dplyr)
summarise()
summarise(ant6)
coplot(Distance~Mass|Colony, data = ant6)
coplot(Distance~Mass|factor(Colony), data = ant6)
coplot(Mass~Distance|factor(Colony), data = ant6)
coplot(Mass~Colony|factor(Distance), data = ant6)
plot(lmod6)
plot(lmod6,which=1:4)
par(mfrow=(2,2))
par(mfrow=c(2,2))
plot(lmod6,which=1:4)
coplot(Mass~Distance|factor(Colony), data = ant6)
coplot(Mass~Distance|factor(Colony), data = ant6)
coplot(Mass~Colony|factor(Distance), data = ant6)
coplot(Mass~Size.class|factor(Distance), data = ant6)
lmod6 = lm(log(Mass) ~ Colony + Distance + Size.class, data=ant6)
summary(lmod6)
par(mfrow=c(2,2))
plot(lmod6,which=1:4)
summary(lmod6)
ggplot(ant6) + geom_boxplot(aes(x=Colony, y = Mass))
coplot(Mass~Distance|factor(Colony), data = ant6)
library(DAAG)
rm(list = ls())
library(DAAG)
data(frogs)
help(frogs)
install.packages(DAAG)
install.packages("DAAG")
library(DAAG)
data(frogs)
help(frogs)
plot(northing ~ easting, data=frogs, pch=c(1,16)[frogs$pres.abs+1],
xlab="Meters east of reference point", ylab="Meters north")
pairs(frogs[,4:10], oma=c(2,2,2,2), cex=0.5)
#The scatter plots involving the variables distance and NoOfPools look a little odd. It makes sense to consider transforming them.
summary(frogs$distance)
plot(density(frogs$distance))
plot(density(log(frogs$distance)))
summary(frogs$NoOfPools)
plot(density(frogs$NoOfPools))
plot(density(log(frogs$NoOfPools)))
#Fit the logistic model:
frogs.glm0 <- glm(formula = pres.abs ~ altitude + log(distance) +
log(NoOfPools) + NoOfSites + avrain + meanmin + meanmax,
family = binomial, data = frogs)
#Fit the logistic model:
frogs.glm0 <- glm(formula = pres.abs ~ altitude + log(distance) +
log(NoOfPools) + NoOfSites + avrain + meanmin + meanmax,
family = binomial, data = frogs)
# Default link function for binomial is logit
summary(frogs.glm0)
#We will try to understand all the numbers in the above output starting with the coefficients.
#Fisher Scoring stands for an algorithm that is a minor modification of Newton's method. Essentially in Fisher Scoring, one replaces the Hessian matrix of the log-likelihood function by its expectation. For logistic regression, the Hessian matrix of the log-likelihood function does not involve y and hence for logistic regression, there is no difference between Newton's method (and IRLS or IWLS) and Fisher Scoring. For other generalized linear models, they might be different.
names(frogs.glm0)
frogs.glm0$coefficients
pres.abs
View(frogs)
knitr::opts_chunk$set(echo = TRUE)
library("model4you")
library(ggplot2)
library(faraway)
library(leaps)
library(car)
body = read.csv("Bodyfat.csv")
ant = read.csv("thatch-ant.dat.txt")
ggplot(data = ant6, aes(x= Colony, y=Distance)) +
geom_boxplot()
a = c(1,1,2,3,4,1)
cumsum(a)
cumsum(a==1)
cumsum(a==1)/1:6
ggplot(data = ant6, aes(x= Colony, y=Distance)) +
geom_boxplot()
col1 = ant[ant$Colony == 1,]
col2 = ant[ant$Colony == 2,]
col3 = ant[ant$Colony == 3,]
col4 = ant[ant$Colony == 4,]
col5 = ant[ant$Colony == 5,]
col6 = ant[ant$Colony == 6,]
ant6 = rbind(col1,col2,col3,col4,col5,col6)
ggplot(data = ant6, aes(x= Colony, y=Distance)) +
geom_boxplot()
ggplot(data = ant6, aes(x= Colony, y=Distance)) +
geom_boxplot(aes(group=Colony))
ggplot(data = ant6, aes(y=Distance)) +
geom_boxplot()+facet_wrap(~Colony)
ggplot(data = ant6, aes(x= Colony, y=Distance)) +
geom_boxplot(aes(group=Colony))
ggplot(data=ant6) + geom_histogram(aes(Distance))+facet_wrap(~Colony)
?stat_bin
ggplot(data=ant6) + geom_histogram(aes(Distance),bins = 200)+facet_wrap(~Colony)
ggplot(data=ant6) + geom_histogram(aes(Distance),bins = 10)+facet_wrap(~Colony)
ggplot(data=ant6) + geom_histogram(aes(Distance),bins = 20)+facet_wrap(~Colony)
# coplot(Mass ~ Distance  |Colony, data=ant6)
ggplot(ant6) + geom_boxplot(aes(x=Colony, y = Distance))
# coplot(Mass ~ Distance  |Colony, data=ant6)
ggplot(ant6) + geom_boxplot(aes(x=Colony, y = Mass))
# coplot(Mass ~ Distance  |Colony, data=ant6)
coplot(Mass~Distance|factor(Colony), data = ant6)
coplot(Mass~Colony|factor(Distance), data = ant6)
coplot(Mass~Size.class|factor(Distance), data = ant6)
ant6$Colony = as.factor(ant6$Colony)
lmod6 = lm(log(Mass) ~ Colony + Distance + Size.class, data=ant6)
summary(lmod6)
par(mfrow=c(2,2))
plot(lmod6,which=1:4)
summary(lmod6)
mean(col1$Mass)
mean(col2$Mass)
mean(col3$Mass)
mean(col4$Mass)
mean(col5$Mass)
mean(col6$Mass)
summary(lm(Mass ~ Distance + Size.class, data=col1))
summary(lm(Mass ~ Distance + Size.class, data=col2))
summary(lm(Mass ~ Distance + Size.class, data=col23)
summary(lm(Mass ~ Distance + Size.class, data=col3))
summary(lm(Mass ~ Distance + Size.class, data=col3))
summary(lm(Mass ~ Distance + Size.class, data=col4))
summary(lm(Mass ~ Distance + Size.class, data=col5))
summary(lm(Mass ~ Distance + Size.class, data=col7))
ggplot(data=ant6) + geom_point(aes(x=Distance,y=Mass),bins = 20)+facet_wrap(~Colony)
dist7 = ant6[ant6$Distance == 7,]
lm(Mass ~ Distance ,data=dist7)
View(dist7)
plot(dist7$Distance)
plot(dist7$Mass,dist7$Distance)
plot(dist7$Mass,dist7$Distance)
hist(dist7$Mass)
dist10 = ant6[ant6$Distance == 10,]
hist(dist10$Mass)
dist10 = ant6[ant6$Distance == 10,]
dist7 = ant6[ant6$Distance == 7,]
hist(dist7$Distance)
hist(dist10$Distance)
dist10 = ant6[ant6$Distance == 10,]
dist7 = ant6[ant6$Distance == 7,]
hist(dist7$Distance)
hist(dist10$Distance)
dist10 = ant6[ant6$Distance == 10,]
dist7 = ant6[ant6$Distance == 7,]
hist(dist7$Mass)
hist(dist10$Mass)
boxplot(dist7$Mass)
boxplot(dist10$Mass)
boxplot(dist7$Mass)
boxplot(dist10$Mass)
dist = rbind(dist10, dist7)
boxplot(dist$Mass)
boxplot(Mass ~ Distance, dist)
dist10 = ant6[ant6$Distance == 10,]
dist7 = ant6[ant6$Distance == 7,]
dist = rbind(dist10, dist7)
boxplot(Mass ~ Distance, dist)
dist10 = ant6[ant6$Distance == 10,]
colnames(dist10$Distance)= "Distance 10"
dist10 = ant6[ant6$Distance == 10,]
colnames(dist10)[2]= "Distance 10"
dist7 = ant6[ant6$Distance == 7,]
colnames(dist7)[2]= "Distance 7"
dist = rbind(dist10, dist7)
dist10 = ant6[ant6$Distance == 10,]
colnames(dist10)[2]= "Distance 10"
View(dist10)
dist7 = ant6[ant6$Distance == 7,]
colnames(dist7)[2]= "Distance 7"
dist = rbind(dist10, dist7)
boxplot(Mass ~ Distance,xlab="Distance" dist)
boxplot(Mass ~ Distance,xlab="Distance", dist)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass" dist)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= dist)
ggplot(data=ant6) + geom_histogram(aes(Distance),bins = 20)+facet_wrap(~Colony)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= ant6)
dist10 = ant6[ant6$Distance == 10,]
dist7 = ant6[ant6$Distance == 7,]
dist = rbind(dist10, dist7)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= dist)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col1)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col2)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col3)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col4)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col5)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col6)
par(mfrow = c(2,3))
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col1)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col2)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col3)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col4)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col5)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col6)
par(mfrow = c(3,2))
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col1)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col2)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col3)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col4)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col5)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col6)
par(mfrow = c(3,2))
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col1)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col2)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col3)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col4)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col5)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col6)
par(mfrow = c(3,2))
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col1)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col2)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col3)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col4)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col5)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col6)
dist10 = ant6[ant6$Distance == 10,]
dist7 = ant6[ant6$Distance == 7,]
dist = rbind(dist10, dist7)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= dist)
# dist10 = ant6[ant6$Distance == 10,]
#
# dist7 = ant6[ant6$Distance == 7,]
#
# dist = rbind(dist10, dist7)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= dist)
# dist10 = ant6[ant6$Distance == 10,]
#
# dist7 = ant6[ant6$Distance == 7,]
#
# dist = rbind(dist10, dist7)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= ant6)
lmod6 = lm(log(Mass) ~ Colony + Distance + Size.class, data=ant6)
summary(lmod6)
boxplot(Mass ~ Size.class,xlab="Distance",ylab="Mass",data= ant6)
View(ant6)
factor(ant6$Size.class)
boxplot(Mass ~ Size.class,xlab="Distance",ylab="Mass",data= ant6)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= ant6)
ggplot(data=ant6) + geom_boxplot(aes(Mass ~ Distance))+facet_wrap(~Colony)
ggplot(data=ant6) + geom_boxplot(aes(Mass))+facet_wrap(~Colony)
ggplot(data=ant6) + geom_boxplot(aes(y=Mass))+facet_wrap(~Colony)
par(mfrow = c(1,3))
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col1)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col2)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col3)
par(mfrow = c(1,3))
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col4)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col5)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col6)
par(mfrow = c(3,1))
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col1)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col2)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col3)
par(mfrow = c(3,1))
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col4)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col5)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col6)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col1)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col2)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col3)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col4)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col5)
boxplot(Mass ~ Distance,xlab="Distance",ylab="Mass",data= col6)
factor(ant6$Size.class)
str(ant6)
levels(ant6$Size.class)
mean(ant6$Mass)
predict(lmod6)
model.matrix(lmod6)
head(model.matrix(lmod6))
new = head(model.matrix(lmod6))
new1 = new[1,]
new1
predict(lmod6,new1)
predict(lmod6,data=new1)
new1 = data.frame(new1)
new1
predict(lmod6, new1)
new
new1 = new[1,]
new1
new1 = new[-1]
new1
new1 = new1[-1]
new1
new1 = new[1,]
new1
new1=new1[-1]
new1
predict(lmod6, new1)
lmod6$fitted.values
plot(lmod6 , which=1)
lmod6 = lm(Mass ~ Colony + Distance + Size.class, data=ant6)
summary(lmod6)
skewness
library(e1071)
skewness
skewness(ant6$Mass)
?skewness
plot(ant6$Mass)
library(faraway)
skewness(chicago$race)
plot(chicago$race)
plot(chicago$income)
lmod6 = lm(log(Mass) ~ Colony + Distance + Size.class, data=ant6)
summary(lmod6)
lmod6 = lm(Mass ~ Colony + Distance + Size.class, data=ant6)
summary(lmod6)
levels(ant6$Size.class)
boxplot(Mass ~ Size.class,xlab="Size",ylab="Mass",data= ant6)
hist(Size.class,xlab="Distance",ylab="Mass",data= col1)
hist(Size.class,xlab="Distance",ylab="Mass",data= col1)
hist(col1$Size.class,xlab="Distance",ylab="Mass",data= col1)
boxplot(Size.class,xlab="Distance",ylab="Mass",data= col1)
col1$Size.class
count
counts
hist(col1$Size.class)
hist(women$height)
ar(mfrow=c(2,2))
par(mfrow=c(2,2))
plot(lmod6,which=1:4)
lmod2.backward.score = sum((lmod2.backward$residuals/(1 - influence(lmod2.backward)$hat))^2)
skewness(ant6$Mass)
str(ant6)
plot(influence(lmod6)$hat)
knitr::opts_chunk$set(echo = TRUE)
library("model4you")
library(ggplot2)
library(faraway)
library(leaps)
library(car)
body = read.csv("Bodyfat.csv")
#check skewness
library(e1071)
ant = read.csv("thatch-ant.dat.txt")
skewness(ant6$Mass)
#skewness of Mass is not big, so we don't neet to take the log
ant6$Colony = as.factor(ant6$Colony)
lmod6 = lm(Mass ~ Colony + Distance + Size.class, data=ant6)
summary(lmod6)
par(mfrow=c(2,3))
plot(lmod6,which=1:4)
plot(influence(lmod6)$hat)
ant6[460]
ant6[460,]
ant6[Size.class = "\x80",]
ant6[Size.class = "\x80"]
ant6[Size.class == "\x80"]
ant6[ant6$Size.class == "\x80"]
ant6[ant6$Size.class == "\x80",]
lmod6 = lm(Mass ~ Colony + Distance +Colony*Distance + Size.class, data=ant6)
summary(lmod6)
